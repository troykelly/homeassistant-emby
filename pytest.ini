[pytest]
# Enable *auto* mode for pytest-asyncio so that tests can request **either**
# synchronous **or** asynchronous fixtures from within *async* test functions
# without triggering the strict validation warnings introduced in
# pytest-asyncio v0.23+.  The integration test-suite relies on several async
# Home Assistant fixtures (``hass``, ``hass_ws_client`` etc.) that are
# consumed by ``@pytest.mark.asyncio`` tests – auto-mode handles the required
# event-loop juggling transparently and prevents the following warnings::
#
#     PytestDeprecationWarning: asyncio test '...' requested async @pytest.fixture ... in strict mode
#
# Adopting the recommended project-level configuration ensures forward
# compatibility while keeping the individual test files unchanged.
asyncio_mode = auto

# Treat *RuntimeWarning: coroutine ... was never awaited* as an error so the
# suite fails if improper await-handling slips back in.  The current codebase
# passes cleanly after switching to *auto* mode – enforcing it here guards
# against regressions.
filterwarnings =
    error::RuntimeWarning:coroutine '.*' was never awaited